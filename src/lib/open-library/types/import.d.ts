/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "^\w+".
 */
export type StringArray = string[];

export interface OpenLibraryImportSchema {
  title: string;
  subtitle?: string;
  source_records: StringArray;
  publishers: StringArray;
  authors: ImportAuthor[];
  /**
   * The publication date in Extended Date/Time Format (EDTF) -- https://www.loc.gov/standards/datetime/
   */
  publish_date: string;
  publish_places?: StringArray;
  number_of_pages?: number;
  pagination?: string;
  by_statement?: string;
  description?: string;
  /**
   * The MARC21 country code. See https://www.loc.gov/marc/countries/cou_home.html
   */
  publish_country?: string;
  languages?: string[];
  translated_from?: string[];
  translation_of?: string;
  isbn_10?: string[];
  isbn_13?: string[];
  oclc_numbers?: StringArray;
  lccn?: StringArray;
  lc_classifications?: string[];
  dewey_decimal_class?: StringArray;
  notes?: string;
  edition_name?: string;
  table_of_contents?: unknown[];
  series?: StringArray;
  subjects?: StringArray;
  subject_times?: StringArray;
  subject_people?: StringArray;
  subject_places?: StringArray;
  contributions?: StringArray;
  work_titles?: StringArray;
  other_titles?: StringArray;
  links?: Link[];
  physical_format?: string;
  physical_dimensions?: string;
  weight?: string;
  /**
   * Unique identifiers used by external sites to identify a book. Used by Open Library to link offsite.
   */
  identifiers?: {
    [k: string]: StringArray;
  };
  /**
   * URL for an edition's cover
   */
  cover?: string;
}
export interface ImportAuthor {
  name: string;
  /**
   * Can be identical to 'name'. TODO: provide information on the intended difference.
   */
  personal_name?: string;
  birth_date?: string;
  death_date?: string;
  entity_type?: "person" | "org" | "event";
  title?: string;
}
export interface Link {
  url: string;
  title: string;
  type?: {
    key: "/type/link";
  };
}
